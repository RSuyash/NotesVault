name: Deploy to Hostinger

on:
  push:
    branches:
      - master # Trigger on master branch
      - main   # Also trigger on main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20' # Use an appropriate LTS version

    - name: Install Frontend Dependencies
      run: npm ci
      working-directory: ./notesvault-react-mvp

    # MODIFIED STEP: Explicitly set VITE_API_BASE_URL for the build command
    - name: Build React App
      env:
        VITE_API_BASE_URL: https://notesvault.in/api # Force the correct value
      run: npm run build
      working-directory: ./notesvault-react-mvp

    # NEW STEP: Verify the built JS file contains the correct API path
    - name: Verify Build Output
      run: |
        echo "Searching for '/api/login.php' in built JS..."
        JS_FILE=$(find ./notesvault-react-mvp/dist/assets -name 'index-*.js')
        if [ -z "$JS_FILE" ]; then
          echo "ERROR: Could not find built JS file!"
          exit 1
        fi
        echo "Checking file: $JS_FILE"
        if grep -q "/api/login.php" "$JS_FILE"; then
          echo "OK: Found correct API path '/api/login.php' in built JS."
        else
          echo "ERROR: Did not find '/api/login.php' in built JS file!"
          # Check for the incorrect path
          if grep -q "undefined/login.php" "$JS_FILE"; then
            echo "ERROR: Found 'undefined/login.php' instead!"
          else
             echo "ERROR: Neither correct nor 'undefined' path found. Build output is unexpected."
          fi
          # Display context around where login.php might be mentioned
          echo "--- Context around 'login.php' in $JS_FILE ---"
          grep -C 3 "login.php" "$JS_FILE" || echo "(Context not found)"
          echo "---------------------------------------------"
          exit 1 # Fail the workflow if the build is incorrect
        fi
      shell: bash

    - name: Generate Production Config for API
      run: |
        echo "<?php" > api/config.prod.php
        echo "// Production Configuration (api/config.prod.php) - Generated by GitHub Actions" >> api/config.prod.php
        echo "// This file is loaded by config.php ONLY on the production server." >> api/config.prod.php
        echo "" >> api/config.prod.php
        echo "// --- Production Database Configuration ---" >> api/config.prod.php
        echo "define('DB_HOST', '${{ secrets.DB_HOST }}');" >> api/config.prod.php
        echo "define('DB_USER', '${{ secrets.DB_USER }}');" >> api/config.prod.php
        echo "define('DB_PASS', '${{ secrets.DB_PASS }}');" >> api/config.prod.php
        echo "define('DB_NAME', '${{ secrets.DB_NAME }}');" >> api/config.prod.php
        echo "" >> api/config.prod.php
        echo "// --- Production JWT Configuration ---" >> api/config.prod.php
        echo "define('JWT_SECRET_KEY', '${{ secrets.JWT_SECRET_KEY }}');" >> api/config.prod.php
        echo "" >> api/config.prod.php
        echo "// --- JWT Expiration Time (Using default from config.php unless overridden here) ---" >> api/config.prod.php
        echo "// define('JWT_EXPIRATION_TIME', 3600);" >> api/config.prod.php
        echo "" >> api/config.prod.php
        echo "?>" >> api/config.prod.php
      shell: bash

    - name: Prepare Staging Directory
      run: |
        mkdir deploy_staging
        cp -r notesvault-react-mvp/dist/* deploy_staging/
        cp .htaccess deploy_staging/
        rsync -av --exclude 'config.prod.php' --exclude 'logs/' api/ deploy_staging/api/
        cp api/config.prod.php deploy_staging/api/
      shell: bash

    - name: Deploy Staging Directory to Hostinger
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.HOSTINGER_FTP_SERVER }}
        username: ${{ secrets.HOSTINGER_FTP_USERNAME }}
        password: ${{ secrets.HOSTINGER_FTP_PASSWORD }}
        protocol: ftp # Or ftps, sftp
        port: 21 # Or 22 for SFTP
        local-dir: ./deploy_staging/
        server-dir: /public_html/
        # dangerous-clean-slate: true # Removed to prevent accidental deletion of non-repo files
        # dangerous-skip-temporary-update-check: true # Removed as it's not a valid input for this action version
