name: Deploy to Hostinger

on:
  push:
    branches:
      - master # Or 'main', depending on your default branch

jobs:
  deploy:
    runs-on: ubuntu-latest # Use a standard Linux runner

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # --- Frontend Build ---
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20' # Specify your Node.js version

    - name: Clean npm cache
      working-directory: ./notesvault-react-mvp
      run: npm cache clean --force

    - name: Install Frontend Dependencies (Clean Install)
      working-directory: ./notesvault-react-mvp # Specify frontend directory
      run: npm ci # Use clean install based on package-lock.json

    - name: Remove previous build output
      working-directory: ./notesvault-react-mvp
      run: rm -rf dist # Ensure a completely fresh build

    - name: Build Frontend
      working-directory: ./notesvault-react-mvp # Specify frontend directory
      env: # Set environment variables for this step
        VITE_API_BASE_URL: /api
      # The run command now uses the environment variable set above
      run: npm run build
      # Note: We use /api assuming PHP scripts are in public_html/api
      # If your final PHP API URL is different, adjust this build command accordingly.

    # --- Prepare Deployment Files ---
    # Create a temporary directory to gather all files for deployment
    - name: Create deployment package directory
      run: mkdir deployment_package

    # Copy built frontend files into a 'notesvault' subdirectory
    - name: Copy frontend build to deployment package root
      run: cp -r ./notesvault-react-mvp/dist/* ./deployment_package/

    # Copy PHP API files
    - name: Copy PHP API to deployment package
      run: cp -r ./api ./deployment_package/


    # Copy .htaccess file
    - name: Copy .htaccess to deployment package
      run: cp ./.htaccess ./deployment_package/

    # --- Configure PHP Database ---
    # Replace placeholders in config.php with secrets
    # IMPORTANT: Ensure config.php in repo uses distinct placeholders
    - name: Configure api/config.php
      run: |
        sed -i "s|define('DB_HOST', '.*');|define('DB_HOST', '${{ secrets.DB_HOST }}');|g" ./deployment_package/api/config.php # Add replacement for DB_HOST
        sed -i "s|define('DB_USER', '.*');|define('DB_USER', '${{ secrets.DB_USER }}');|g" ./deployment_package/api/config.php
        sed -i "s|define('DB_PASS', '.*');|define('DB_PASS', '${{ secrets.DB_PASS }}');|g" ./deployment_package/api/config.php
        sed -i "s|define('DB_NAME', '.*');|define('DB_NAME', '${{ secrets.DB_NAME }}');|g" ./deployment_package/api/config.php
        sed -i "s|define('JWT_SECRET_KEY', '.*');|define('JWT_SECRET_KEY', '${{ secrets.JWT_SECRET_KEY }}');|g" ./deployment_package/api/config.php

        # Add sed command for frontend URL if needed in config.php

    # --- Deploy React App via FTP (No Clean Slate, Exclude API) --- # Force redeploy
    - name: FTP Deploy React App
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.HOSTINGER_FTP_SERVER }}
        username: ${{ secrets.HOSTINGER_FTP_USERNAME }}
        password: ${{ secrets.HOSTINGER_FTP_PASSWORD }}
        local-dir: ./deployment_package/ # Source is the root of the package
        server-dir: /public_html/ # Target the web root
        exclude: | # Exclude the api directory and other standard ignores
          **/api/**
          **/.git*
          **/.git*/**
          **/node_modules/**
        # dangerous-clean-slate: true # Avoid clean slate to prevent deletion errors

    # --- Deploy API via FTP (Overwrite Only) ---
    - name: FTP Deploy API
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.HOSTINGER_FTP_SERVER }}
        username: ${{ secrets.HOSTINGER_FTP_USERNAME }}
        password: ${{ secrets.HOSTINGER_FTP_PASSWORD }}
        local-dir: ./deployment_package/api/ # Source is only the api directory
        server-dir: /public_html/api/ # Target the api directory specifically
        # No clean-slate, just upload/overwrite