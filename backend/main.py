from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel

# Define a Pydantic model for the request body
class TopicRequest(BaseModel):
    topic: str

# Initialize the FastAPI app
app = FastAPI()

# Configure CORS middleware
origins = [
    "http://localhost:5173", # React dev server
    "http://127.0.0.1:5173",
    # Add other origins if needed
]

app.add_middleware(
    CORSMiddleware,
    allow_origins=origins,
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# Create the POST endpoint /api/generate
@app.post("/api/generate")
async def generate_notes(request: TopicRequest):
    # Placeholder logic: Just return a dummy response
    print(f"Received topic: {request.topic}") # Log received topic
    dummy_markdown = f"# Dummy Response for: {request.topic}\n\nThis is placeholder content generated by the backend."
    return {"success": True, "markdown": dummy_markdown}

# Add a simple root endpoint for testing
@app.get("/")
async def root():
    return {"message": "NotesVault Backend is running"}